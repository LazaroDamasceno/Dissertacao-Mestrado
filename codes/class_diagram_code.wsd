@startuml

class "Person" {
 +id: String
 +firstName: String?
 +middleName: String
 +lastName: String
 +ssn: String
 +birthDate: LocalDate
 +phoneNumber: String
 +gender: Gender
 +email: String
 +createdAt: LocalDateTime
 +updatedAt: LocalDateTime
 
 +of(registrationDTO: PersonRegistrationDTO): Person
 +update(updatingDTO: PersonUpdatingDTO)
}

class "Customer" {
 +id: String
 +address: Address
 +createdAt: LocalDateTime
 +updatedAt: LocalDateTime
 
 +of(person: Person, address: Address): Customer
 +update(updatingDTO: PersonUpdatingDTO)
 +toDTO(): CustomerResponseDTO
}

class "Doctor" {
 +id: String
 +medicalLicenseNumber: MedicalLicenseNumber
 +status: ProfessionalStatus
 +createdAt: LocalDateTime
 +updatedAt: LocalDateTime
 +terminatedAt: LocalDateTime
 
 +of(person: Person, medicalLicenseNumber: MedicalLicenseNumber): Doctor
 +markAsTerminated()
 +markAsRehired()
 +toDTO(): DoctorResponseDTO
}

class "MedicalSlot" {
  +id: String
  +status: MedicalSlotStatus
  +availableAt: LocalDateTime
  +canceledAt: LocalDateTime
  +completedAt: LocalDateTime
  
  +of(doctor: Doctor, availableAt: LocalDateTime): MedicalSlot
  +markAsCanceled()
  +markAsCompleted()
  +toDTO(): MedicalSlotResponseDTO
}

class "MedicalAppointment" {
  +id: String
  +status: MedicalAppointmentStatus
  +bookedAt: LocalDateTime
  +canceledAt: LocalDateTime
  +completedAt: LocalDateTime
  +price: BigDecimal
  
  +of(doctor: Doctor, availableAt: LocalDateTime): MedicalSlot
  +markAsCanceled()
  +markAsCompleted()
  +markAsPaid()
  +toDTO(): MedicalAppointmentResponseDTO
}

Customer *-- Person: "(1 .. 1)"
Doctor *-- Person: "(1 .. 1)"
Doctor *-- MedicalSlot: "(1 .. n)"
MedicalAppointment -- Doctor: "(n .. 1)"
MedicalAppointment *-- Customer: "(n .. 1)"
MedicalSlot -- MedicalAppointment: "(1 .. 1)"

@enduml